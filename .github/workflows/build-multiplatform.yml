name: Build PosQuantum

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            executable: PosQuantum-3.0.exe
            artifact: PosQuantum-Windows
          - os: ubuntu-latest
            platform: linux
            executable: PosQuantum-3.0
            artifact: PosQuantum-Linux
          - os: macos-latest
            platform: macos
            executable: PosQuantum-3.0
            artifact: PosQuantum-macOS

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.POSQUANTUM_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install PyQt6
        pip install -r requirements.txt

    - name: Create runtime hooks
      run: |
        mkdir -p hooks
        echo '# -*- coding: utf-8 -*-
import os
import sys
import importlib

def import_submodules(package_name):
    """Importa todos os submódulos de um pacote"""
    package = importlib.import_module(package_name)
    
    if hasattr(package, "__path__"):
        for loader, name, is_pkg in importlib.util.find_modules(package_name):
            full_name = package_name + "." + name
            importlib.import_module(full_name)
            if is_pkg:
                import_submodules(full_name)

# Configurar diretório base
if hasattr(sys, "_MEIPASS"):
    # Executando a partir do executável PyInstaller
    BASE_DIR = sys._MEIPASS
else:
    # Executando a partir do script
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))

# Adicionar diretório base ao path
sys.path.insert(0, BASE_DIR)

# Importar submódulos
try:
    import_submodules("posquantum_modules")
except Exception as e:
    print(f"Erro ao importar submódulos: {e}")

# Configurar variáveis de ambiente
os.environ["POSQUANTUM_BASE_DIR"] = BASE_DIR' > hooks/runtime_hook.py

    - name: Build with PyInstaller
      run: |
        pyinstaller --clean --noconfirm --onefile --name="PosQuantum-3.0" --add-data="assets:assets" --add-data="posquantum_modules:posquantum_modules" --hidden-import="PyQt6.QtCore" --hidden-import="PyQt6.QtGui" --hidden-import="PyQt6.QtWidgets" --hidden-import="posquantum_modules.crypto" --hidden-import="posquantum_modules.network" --hidden-import="posquantum_modules.compliance" --runtime-hook="hooks/runtime_hook.py" main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact }}
        path: dist/${{ matrix.executable }}

    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.POSQUANTUM_TOKEN }}
      with:
        tag_name: v3.0-${{ github.run_number }}
        release_name: PosQuantum v3.0 Build ${{ github.run_number }}
        draft: false
        prerelease: false
        body: |
          PosQuantum v3.0 - Sistema de Segurança Pós-Quântica
          
          Build automático gerado pelo GitHub Actions.
          
          Plataformas disponíveis:
          - Windows
          - Linux
          - macOS
          
          Todas as funcionalidades implementadas com criptografia pós-quântica em todas as camadas.

    - name: Upload Release Asset
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.POSQUANTUM_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/${{ matrix.executable }}
        asset_name: PosQuantum-3.0-${{ matrix.platform }}${{ matrix.platform == 'windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream

